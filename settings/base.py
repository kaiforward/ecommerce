"""
Django settings for evasite project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

ALLOWED_HOSTS = ["573e1712.ngrok.io", "localhost"]

# remember to restart commandline when you add new vairables
# django wants a key in quotes ""
SECRET_KEY = os.environ['EVA_SITE_SECRET_KEY']
# Stripe doesn't
STRIPE_PUBLIC_KEY = os.environ['EVA_SITE_STRIPE_PUBLIC']
STRIPE_SECRET_KEY = os.environ['EVA_SITE_STRIPE_SECRET']

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_countries',
    'tinymce',
    'stripe',
    'storages',
    'paypal.standard.ipn',        
    'home',
    'products',
    'blog',
    'cart',
    'orders',
    'payment',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'evasite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')], 
        # add os.path BASE_DIR so loader searches project root directory for templates as well as apps
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # My Custom Context Processor
                'products.context_processors.nav_categories', 
                'home.context_processors.nav_homepage',
                # 'cart.context_processors.nav_cart', 
            ],
        },
    },
]

WSGI_APPLICATION = 'evasite.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-uk'

TIME_ZONE = 'GMT'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

# set static urls like this
STATIC_URL = '/static/'
# set static directory in base Directory like this.
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

TINYMCE_JS_ROOT = os.path.join(BASE_DIR, "static", "js",
                               "tinymce", "tinymce.min.js")

TINYMCE_DEFAULT_CONFIG = {
    'width': '100%',
    'height': 300,
}

CART_SESSION_ID = 'cart'
SHIPPING_SESSION_ID = 'shipping'

COUNTRIES_FIRST = [
    'GB',
]

AWS_STORAGE_BUCKET_NAME = 'kaiforwardtest'
AWS_S3_REGION_NAME = 'eu-west-2'  # e.g. us-east-2

AWS_ACCESS_KEY_ID = os.environ['EVA_SITE_AWS_PUBLIC']
AWS_SECRET_ACCESS_KEY = os.environ['EVA_SITE_AWS_SECRET']

# Tell django-storages the domain to use to refer to static files.
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME

MEDIAFILES_LOCATION = 'media'  
MEDIA_URL = "https://%s/%s/" % (AWS_S3_CUSTOM_DOMAIN, MEDIAFILES_LOCATION)
DEFAULT_FILE_STORAGE = 'custom_storages.MediaStorage'

# to switch to amazon s3 enable these settings, remove old static settings, and run collect static.
# STATICFILES_LOCATION = 'static'  
# STATICFILES_STORAGE = 'custom_storages.StaticStorage'
# STATIC_URL = '/static/'